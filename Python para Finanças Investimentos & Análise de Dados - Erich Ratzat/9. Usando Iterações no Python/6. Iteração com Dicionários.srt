1

00:00:01,030  -->  00:00:06,609
Vamos ver algo um pouco mais desafiador.
Iterar em um dicionário.

2

00:00:06,609  -->  00:00:08,810
Vamos ver alguns exemplos aqui.

3

00:00:08,810  -->  00:00:14,040
Os preços de um pacote de espaguete, de uma porção
de lasanha e de um hambúrguer estão armazenados

4

00:00:14,040  -->  00:00:16,820
em um dicionário chamado "prices".

5

00:00:16,820  -->  00:00:22,630
Jõao foi ao supermercado e comprou seis caixas
de espaguete, 10 pedaços de lasanha e nenhum

6

00:00:22,630  -->  00:00:24,440
hamburger.

7

00:00:24,440  -->  00:00:28,120
Esses dados foram armazenados em um dicionário chamado
"quantity".

8

00:00:28,120  -->  00:00:32,279
Nosso problema é: quanto João gastou no
supermercado?

9

00:00:32,279  -->  00:00:39,260
Bem, é óbvio que você precisará multiplicar
a quantidade de cada alimento pelo seu preço.

10

00:00:39,260  -->  00:00:43,399
Você deve ter notado que nossos dicionários possuem
exatamente as mesmas chaves.

11

00:00:43,399  -->  00:00:45,160
Vamos explorar isso.

12

00:00:45,160  -->  00:00:49,550
O procedimento vai ser: ir para a caixa de espaguete
no primeiro dicionário e pegar o valor

13

00:00:49,550  -->  00:00:56,170
4, em seguida, pegar o valor de 6 no dicionário
de quantidade e multiplicar esses dois valores.

14

00:00:56,170  -->  00:01:04,229
Vamos repetir a mesma coisa para cada alimento.

15

00:01:04,229  -->  00:01:05,630
Opa, isso deve ter te chamando a atenção.

16

00:01:05,630  -->  00:01:10,000
Tenho certeza que você está pensando:
Precisamos de um loop.

17

00:01:10,000  -->  00:01:15,020
Ok, isso está claro, mas o que vamos
fazer com o loop?

18

00:01:15,020  -->  00:01:18,270
O que vai conter no corpo do loop?

19

00:01:18,270  -->  00:01:23,409
Antes de mais nada, alguma variável deve contabilizar
a quantidade de dinheiro gasto, certo?

20

00:01:23,409  -->  00:01:25,770
Vamos implementar um truque bem conhecido.

21

00:01:25,770  -->  00:01:30,710
Vou criar uma soma cumulativa chamada "money
spent", que inicialmente assumirá o valor

22

00:01:30,710  -->  00:01:32,350
de zero.

23

00:01:32,350  -->  00:01:39,700
Assim, podemos começar a iterar sobre cada item
em prices, nesse caso chamaremos de "i".

24

00:01:39,700  -->  00:01:44,020
A cada etapa do loop, eu quero que
a variável "money spent" seja a soma da

25

00:01:44,020  -->  00:01:54,109
multiplicação do preço pela quantidade
de cada item "i".

26

00:01:54,109  -->  00:01:57,220
Isso deve bastar.

27

00:01:57,220  -->  00:02:03,399
Vamos imprimir o resultado para verificar
se tudo está funcionando corretamente.

28

00:02:03,399  -->  00:02:06,979
Aparentemente sim!

29

00:02:06,979  -->  00:02:08,759
Ótimo!

30

00:02:08,759  -->  00:02:14,239
Um problema tão simples em termos de matemática,
requer conhecimento sobre iteração, dicionários,

31

00:02:14,239  -->  00:02:17,000
e como criar uma variável com
incremento gradual.

32

00:02:17,000  -->  00:02:21,430
Então, pela perspectiva do programador, o
problema parece diferente.

33

00:02:21,430  -->  00:02:27,010
O bom é que, no final, tudo isso
se resume a meras quatro linhas de

34

00:02:27,010  -->  00:02:28,060
código!

35

00:02:28,060  -->  00:02:35,900
Só para registrar, você percebe que se
colocarmos quantidade em vez de preços aqui, o resultado

36

00:02:35,900  -->  00:02:38,400
vai ser o mesmo?

37

00:02:38,400  -->  00:02:42,319
Então, qual é a conclusão?

38

00:02:42,319  -->  00:02:47,540
Não importa se o loop é feito em cima dos preços
ou da quantidade, pois os dois dicionários

39

00:02:47,540  -->  00:02:49,910
contém as mesmas chaves.

40

00:02:49,910  -->  00:02:54,230
E esta é a razão pela qual este loop funciona corretamente
também.

41

00:02:54,230  -->  00:02:58,150
Essa seção foi um pouco mais complicada,
não foi?

42

00:02:58,150  -->  00:03:04,269
Os exercícios que você encontrará depois dessa aula
serão mais desafiadores, então é muito importante

43

00:03:04,269  -->  00:03:05,610
que você os resolva!

44

00:03:05,610  -->  00:03:06,779
Obrigado por assistir!
