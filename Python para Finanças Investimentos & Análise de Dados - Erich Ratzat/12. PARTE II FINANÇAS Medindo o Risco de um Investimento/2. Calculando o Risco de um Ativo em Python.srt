1

00:00:01,209  -->  00:00:05,560
O foco dessa aula será o cálculo do risco
de um ativo.

2

00:00:05,560  -->  00:00:10,670
Tenho certeza de que você reconheceu o código escrito nas
duas primeiras células e já entendeu

3

00:00:10,670  -->  00:00:12,490
o que estamos fazendo.

4

00:00:12,490  -->  00:00:18,230
Importamos as mesmas bibliotecas, baixamos os dados
do Yahoo Finance e os salvamos em um

5

00:00:18,230  -->  00:00:21,470
Data Frame chamado “security data”.

6

00:00:21,470  -->  00:00:25,850
Devemos prestar atenção se estamos extraindo
as empresas certas e se o período de tempo

7

00:00:25,850  -->  00:00:28,249
da extração também está correto.

8

00:00:28,249  -->  00:00:33,649
As duas empresas que escolhemos aqui são
a P&G e seu concorrente alemão Beiersdorf.

9

00:00:33,649  -->  00:00:39,399
Por isso, precisaremos do ticker da P&G e da
“BEI.DE”.

10

00:00:39,399  -->  00:00:44,750
Vamos examinar o comportamento das duas ações
nos últimos 10 anos, carregando dados desde

11

00:00:44,750  -->  00:00:47,589
1º de janeiro de 2007.

12

00:00:47,589  -->  00:00:49,269
Ok.

13

00:00:49,269  -->  00:00:50,949
Perfeito.

14

00:00:50,949  -->  00:00:55,989
Vamos falar sobre finanças.

15

00:00:55,989  -->  00:01:01,800
O desvio padrão dos retornos de uma empresa
também pode ser chamado de risco ou volatilidade.

16

00:01:01,800  -->  00:01:07,299
Uma ação cujos retornos mostram um grande desvio
de sua média é considerada mais volátil.

17

00:01:07,299  -->  00:01:08,299
Certo!

18

00:01:08,299  -->  00:01:15,240
Bom, vamos analisar qual das ações são
mais arriscadas ou mais voláteis.

19

00:01:15,240  -->  00:01:21,740
Primeiro, calculamos os retornos logarítmicos porque
examinaremos cada empresa separadamente

20

00:01:21,740  -->  00:01:27,700
no período determinado e essa abordagem nos dirá
mais sobre o comportamento da ação.

21

00:01:27,700  -->  00:01:34,080
Armazenaremos esses dados em um nova tabela chamada
“Security returns”.

22

00:01:34,080  -->  00:01:35,979
Ok.

23

00:01:35,979  -->  00:01:39,409
Essa tabela recém-criada tem duas colunas.

24

00:01:39,409  -->  00:01:44,689
Cada uma contém o retorno logarítimico da P&G e da Beiersdorf,
respectivamente.

25

00:01:44,689  -->  00:01:49,159
E isso nos permite obter a média e
o desvio padrão das duas ações

26

00:01:49,159  -->  00:01:50,700
no nosso data frame.

27

00:01:50,700  -->  00:01:54,619
Para fazer isso, siga a seguinte sintaxe.

28

00:01:54,619  -->  00:01:59,369
Após o nome do objeto que será o data frame
com o retorno logarítimico - "security

29

00:01:59,369  -->  00:02:03,200
returns”, especifique o nome das colunas
em colchetes.

30

00:02:03,200  -->  00:02:08,550
Depois, aplique o método da média que é o "mean".

31

00:02:08,550  -->  00:02:10,770
Vamos obter um número pequeno.

32

00:02:10,770  -->  00:02:13,270
Esse número é igual ao retorno médio diário.

33

00:02:13,270  -->  00:02:18,300
Vamos anualizar esse valor, multiplicamos
ele pelo número de dias úteis de negociação em um ano

34

00:02:18,300  -->  00:02:20,980
– 250.

35

00:02:20,980  -->  00:02:23,660
Ótimo!

36

00:02:23,660  -->  00:02:30,580
Obtivemos um valor ligeiramente acima de 6%, que é
a taxa anual de retorno!

37

00:02:30,580  -->  00:02:35,820
A mesma lógica do Python vai ser aplicada para
calcular a volatilidade da ação

38

00:02:35,820  -->  00:02:37,240
dessa empresa.

39

00:02:37,240  -->  00:02:46,280
O método que usaremos é o ".std" de standard deviation,
que em português é o desvio-padrão.

40

00:02:46,280  -->  00:02:52,230
Para anualizar essa figura, além de multiplicar
por 250, não devemos esquecer de elevar

41

00:02:52,230  -->  00:02:54,730
a potência de 0,5.

42

00:02:54,730  -->  00:02:59,630
Voce vai ter que tirar a raiz quadrada de 250, e
voce não deve esquecer de fazer isso porque

43

00:02:59,630  -->  00:03:06,360
o desvio padrão é a raiz quadrada da
variância.

44

00:03:06,360  -->  00:03:17,760
Na sequencia, nós vamos fazer a mesma coisa para a Beiersdorf.

45

00:03:17,760  -->  00:03:22,040
E o resultado é uma média maior mas também uma maior
volatilidade.

46

00:03:22,040  -->  00:03:23,510
Consegue ver?

47

00:03:23,510  -->  00:03:29,310
Seria mais fácil para nós interpretar
os resultados se colocarmos as duas médias e os

48

00:03:29,310  -->  00:03:34,340
dois desvios-padrão um do lado do outro,
certo?

49

00:03:34,340  -->  00:03:42,440
Para fazer isso, um jeito é imprimir as
equações das duas médias anualizadas.

50

00:03:42,440  -->  00:03:44,870
E aqui está o que nós obtemos.

51

00:03:44,870  -->  00:03:48,740
A segunda maneira é mais elegante, mas é um pouco mais complicada.

52

00:03:48,740  -->  00:03:53,350
A partir dos dados da coluna “security returns”, podemos
extrair a média das duas empresas depois de escrever

53

00:03:53,350  -->  00:03:55,400
uma linha de código.

54

00:03:55,400  -->  00:04:00,430
Precisamos listar os símbolos separados por uma vírgula.

55

00:04:00,430  -->  00:04:07,540
Aparentemente, isso não seria suficiente, pois
o resultado desta célula mostra um erro.

56

00:04:07,540  -->  00:04:10,310
NumPy tem a resposta para esse problema.

57

00:04:10,310  -->  00:04:16,540
As médias e os desvios padrão que obtivemos
foram todos elementos de matrizes unidimensionais.

58

00:04:16,540  -->  00:04:18,709
Eles também estavam em formato decimal.

59

00:04:18,709  -->  00:04:23,569
Aqui estamos tentando incluir dois valores
em um novo objeto NumPy.

60

00:04:23,569  -->  00:04:27,669
Não pode haver um ponto flutuante com dois valores, certo?

61

00:04:27,669  -->  00:04:31,440
Um float só pode conter um único valor.

62

00:04:31,440  -->  00:04:35,450
Portanto, devemos criar um array com duas
dimensões.

63

00:04:35,450  -->  00:04:40,539
Resumidamente, cada par de colchetes que cercam
os nomes das colunas aumentará o número

64

00:04:40,539  -->  00:04:44,879
de dimensões do objeto NumPy recém-criado em 1.

65

00:04:44,879  -->  00:04:50,620
Portanto, podemos corrigir nosso código usando colchetes duplos,
ao invés de colchetes simples.

66

00:04:50,620  -->  00:04:56,810
Nesta aula específica, poderíamos ter resolvido o problema
sem usar o NumPy.

67

00:04:56,810  -->  00:05:01,180
Mas é importante que voce preste atenção para a
diferença entre usar colchetes simples ou

68

00:05:01,180  -->  00:05:06,759
duplos, porque se voce tiver que programar operações matemáticas
avançadas que envolvam a multiplicação de matrizes,

69

00:05:06,759  -->  00:05:11,969
por exemplo, esta parte da sintaxe do Python
será o solucionador de problemas

70

00:05:11,969  -->  00:05:13,599
número um.

71

00:05:13,599  -->  00:05:18,080
Fique tranquilo que vamos lhe mostrar um exemplo
em um dos nossos próximos vídeos.

72

00:05:18,080  -->  00:05:24,060
Ao usar esta técnica, podemos obter as
médias e a volatilidade de ambas empresas.

73

00:05:24,060  -->  00:05:29,710
Isso significa que registramos os valores das médias dos retornos
da P&G e do Beiersdorf’s como elementos

74

00:05:29,710  -->  00:05:37,020
em uma matriz e o valor de seus desvios padrão
em outra matriz.

75

00:05:37,020  -->  00:05:41,939
Esta lição reforça o que aprendemos em
nossa lição anterior, certo?

76

00:05:41,939  -->  00:05:46,110
Ações com maior retorno esperado muitas vezes incorporam
mais risco.

77

00:05:46,110  -->  00:05:51,740
A taxa de retorno da Beiersdorf’s é ligeiramente
maior; entretanto, isso ocorre às custas

78

00:05:51,740  -->  00:05:53,949
de uma maior volatilidade.

79

00:05:53,949  -->  00:05:54,889
Obrigado por assistir!
