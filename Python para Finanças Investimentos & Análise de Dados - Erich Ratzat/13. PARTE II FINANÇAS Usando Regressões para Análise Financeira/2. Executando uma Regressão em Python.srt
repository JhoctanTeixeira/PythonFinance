1

00:00:00,930  -->  00:00:04,600
Parabéns por alcançar esse estágio
do curso!

2

00:00:04,600  -->  00:00:09,540
Até agora, você aprendeu como escrever código
em Python e compreendeu alguns dos fundamentos

3

00:00:09,540  -->  00:00:12,860
que vai precisar ao investir na Bolsa de Valores.

4

00:00:12,860  -->  00:00:15,350
Você se sente confortável sobre tudo que aprendeu até agora?

5

00:00:15,350  -->  00:00:21,110
Deveria, pois você já sabe muita coisa: o que são as taxas de
retorno das ações, retorno de uma carteira, volatilidade,

6

00:00:21,110  -->  00:00:23,880
covariância e correlação…

7

00:00:23,880  -->  00:00:27,810
Todos esses conceitos são fundamentais no
mundo das finanças.

8

00:00:27,810  -->  00:00:32,230
A partir desta lição, vamos continuar
a aprofundar e aprender mais algumas técnicas

9

00:00:32,230  -->  00:00:34,579
avançadas de análises financeira.

10

00:00:34,579  -->  00:00:35,670
Ok.

11

00:00:35,670  -->  00:00:36,760
Perfeito.

12

00:00:36,760  -->  00:00:40,400
Então, vamos começar com a análise de regressão.

13

00:00:40,400  -->  00:00:43,900
Tem pessoas que dedicam as suas vidas a
esse tópico.

14

00:00:43,900  -->  00:00:47,950
Muitos modelos estatísticos econométricos usam
esse conceito.

15

00:00:47,950  -->  00:00:54,350
Para responder a isso, em Python existem módulos
que vai ajudar você a executar uma enorme variedade de regressões.

16

00:00:54,350  -->  00:01:00,610
Aqui nós vamos aprender sobre um dos tipos
de regressão mais utilizados, a regressão OLS.

17

00:01:00,610  -->  00:01:06,100
Primeiro, vamos importar alguns
módulos que não usamos até agora - o 'stats'

18

00:01:06,100  -->  00:01:09,550
do SciPy, e o "Statsmodels.api".

19

00:01:09,550  -->  00:01:16,500
"API" é um sufixo indicando que vamos importar
uma parte grande do módulo statsmodels.

20

00:01:16,500  -->  00:01:22,049
Nós vamos usar a abreviação típica "SM"
para esse módulo.

21

00:01:22,049  -->  00:01:24,400
Muito bom!

22

00:01:24,400  -->  00:01:28,619
Depois que fizermos isso, podemos carregar alguns
dados do nosso banco de dados sobre casas.

23

00:01:28,619  -->  00:01:34,049
Olhando nossos dados temos 20 observações somente.

24

00:01:34,049  -->  00:01:39,250
Nós temos o tamanho e o preço das casas, o
Estado em que estão localizadas, o número de quartos

25

00:01:39,250  -->  00:01:43,750
que elas tem, e o ano que foram
construídas.

26

00:01:43,750  -->  00:01:51,799
Resumidamente, nosso primeiro objetivo vai ser regredir
o tamanho de uma casa em seu preço.

27

00:01:51,799  -->  00:01:56,920
Na aula anterior, nós introduzimos o
conceito de regressões univariadas.

28

00:01:56,920  -->  00:02:02,990
Para executar tal regressão e explicar a variável
dependente do preço de uma casa, vamos precisar somente de uma

29

00:02:02,990  -->  00:02:05,430
variável independente - o tamanho.

30

00:02:05,430  -->  00:02:11,450
Por isso, será conveniente nos concentrarmos
em uma tabela com apenas duas colunas, referindo-se

31

00:02:11,450  -->  00:02:16,660
ao preço da casa e seu tamanho, respectivamente.

32

00:02:16,660  -->  00:02:21,549
Podemos usar os nomes das colunas de interesse
e digitá-los com colchetes duplos, o que

33

00:02:21,549  -->  00:02:25,870
nos levará ao resultado desejado.

34

00:02:25,870  -->  00:02:28,510
Ótimo!

35

00:02:28,510  -->  00:02:33,980
O Python nos permite seguir um procedimento muito intuitivo
para executar uma regressão.

36

00:02:33,980  -->  00:02:40,569
Atribuímos os dados na coluna 'house size'
a uma variável que chamaremos de X.

37

00:02:40,569  -->  00:02:44,749
Essa informação vai representar a variável
independente.

38

00:02:44,749  -->  00:02:51,010
Por outro lado, Y vai se referir aos dados de preços da casa: 'house
price'.

39

00:02:51,010  -->  00:02:52,010
Ok.

40

00:02:52,010  -->  00:03:02,139
Vamos verificar o que temos aqui - um par
de objetos contendo 20 elementos cada.

41

00:03:02,139  -->  00:03:09,029
Esses são os valores armazenados na variável X,
enquanto aqui temos os preços das casas de cada

42

00:03:09,029  -->  00:03:13,120
observação.

43

00:03:13,120  -->  00:03:17,220
Perfeito!

44

00:03:17,220  -->  00:03:20,689
Matplotlib vai nos ajudar a projetar nossos dados em um
gráfico.

45

00:03:20,689  -->  00:03:29,519
Vamos usar o gráfico de dispersão - os dados
vão ficar dispersos neste gráfico.

46

00:03:29,519  -->  00:03:35,129
Este ponto, por exemplo, se refere a
uma casa que tem um tamanho de 1.400 pés quadrados

47

00:03:35,129  -->  00:03:43,229
aproximadamente, e um preço de $820,000.

48

00:03:43,229  -->  00:03:49,319
Este outro ponto, por exemplo, corresponde a uma casa
que tem o tamanho de 1.600 pés quadrados, com um

49

00:03:49,319  -->  00:03:55,069
preço de $1,100,000.

50

00:03:55,069  -->  00:03:56,419
Consegue ver?

51

00:03:56,419  -->  00:04:00,659
É assim que podemos interpretar a posição
de qualquer um dos 20 pontos que vemos no

52

00:04:00,659  -->  00:04:01,849
gráfico.

53

00:04:01,849  -->  00:04:05,329
Será que existe alguma coisa que devemos ter mais atenção?

54

00:04:05,329  -->  00:04:09,819
Sim, eu sou extremamente cauteloso sobre um aspecto.

55

00:04:09,819  -->  00:04:11,260
Vou dizer a você.

56

00:04:11,260  -->  00:04:14,530
Apresentando desta forma, o gráfico pode iludir o
leitor.

57

00:04:14,530  -->  00:04:19,629
O leitor pode pensar que essa casa aqui é
ridiculamente pequena e não custa muito,

58

00:04:19,629  -->  00:04:24,310
enquanto aquela outra, no outro canto, é super cara
e enorme.

59

00:04:24,310  -->  00:04:29,639
Se você prestar muita atenção nos números
mostrados ao longo dos eixos, vai entender que

60

00:04:29,639  -->  00:04:32,229
tem algo de errado.

61

00:04:32,229  -->  00:04:38,030
Portanto, o primeiro conselho que gostaria
de dar é que o método 'axis'

62

00:04:38,030  -->  00:04:44,009
permite definir os valores de início e fim
dos eixos da seguinte maneira: valores do

63

00:04:44,009  -->  00:04:49,500
início e fim do eixo x (o eixo horizontal,
que é o da variável independente), e

64

00:04:49,500  -->  00:04:56,090
e depois valores de início e fim do eixo y (o
eixo vertical, que é o da variável dependente).

65

00:04:56,090  -->  00:05:02,410
Eu sei que neste exemplo, nós não temos
uma casa maior do que 2500 pés quadrados,

66

00:05:02,410  -->  00:05:10,970
ou mais cara que um milhão e meio,
então 0, 2500 e 0, e 1,5 milhão vão ser os valores extremos

67

00:05:10,970  -->  00:05:16,500
e ajustarão o gráfico de acordo e nos fornecerá
espaço suficiente para que possamos plotar nossas observações.

68

00:05:16,500  -->  00:05:17,920
Legal!

69

00:05:17,920  -->  00:05:24,780
Espero que vocês concordem que a imagem parece muito melhor
agora!

70

00:05:24,780  -->  00:05:30,440
Podemos ver que até mesmo a menor das casas
em nosso exemplo custa muito dinheiro e

71

00:05:30,440  -->  00:05:37,460
podemos ter uma ideia melhor sobre a proporção entre o tamanho
e o preço dos nossos dados!

72

00:05:37,460  -->  00:05:40,770
Existe uma pequena melhoria extra que podemos
adicionar a este gráfico.

73

00:05:40,770  -->  00:05:45,629
Eu gostaria de enfatizar que ao criar
um gráfico profissional, devemos

74

00:05:45,629  -->  00:05:47,340
rotular os eixos.

75

00:05:47,340  -->  00:05:54,289
"plt.y-label" vai adicionar um rótulo ao longo
do eixo y, e "plt.x-label" vai

76

00:05:54,289  -->  00:05:58,610
colocar um bloco de texto especificado abaixo do
eixo x.

77

00:05:58,610  -->  00:06:05,930
Assim, mesmo que você não tenha feito nenhuma análise prévia
dos dados, um gráfico poderia dizer muito,

78

00:06:05,930  -->  00:06:09,449
você concorda?

79

00:06:09,449  -->  00:06:15,220
Você podem entender imediatamente que isso representa
uma relação entre o tamanho da casa e

80

00:06:15,220  -->  00:06:17,490
o seu preço.

81

00:06:17,490  -->  00:06:22,300
Criando uma boa apresentação visual de um
conjunto de dados vale mais que mil cálculos

82

00:06:22,300  -->  00:06:25,160
complexos em determinadas situações.

83

00:06:25,160  -->  00:06:30,250
Por esse motivo, dedicamos mais tempo para mostrar
como melhorar um gráfico.

84

00:06:30,250  -->  00:06:34,180
Em nosso próximo vídeo, vamos executar uma regressão
no Python.

85

00:06:34,180  -->  00:06:34,819
Vejo você lá!
